--Task01
DECLARE 
    FACULTY_REC FACULTY%ROWTYPE;
BEGIN
    SELECT * INTO FACULTY_REC FROM FACULTY WHERE FACULTY = 'ÒÎÂ';
    DBMS_OUTPUT.PUT_LINE(FACULTY_REC.FACULTY || ' ' || FACULTY_REC.FACULTY_NAME);
EXCEPTION
    WHEN OTHERS
    THEN DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;

--Task02
DECLARE 
    FACULTY_REC FACULTY%ROWTYPE;
BEGIN
    SELECT * INTO FACULTY_REC FROM FACULTY;
    DBMS_OUTPUT.PUT_LINE(FACULTY_REC.FACULTY || ' ' || FACULTY_REC.FACULTY_NAME);
EXCEPTION
    WHEN OTHERS
    THEN 
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;

--Task03
DECLARE 
    FACULTY_REC FACULTY%ROWTYPE;
BEGIN
    SELECT * INTO FACULTY_REC FROM FACULTY;
    DBMS_OUTPUT.PUT_LINE(FACULTY_REC.FACULTY || ' ' || FACULTY_REC.FACULTY_NAME);
EXCEPTION
    WHEN TOO_MANY_ROWS 
    THEN DBMS_OUTPUT.PUT_LINE('TOO MANY ROWS' || ' ORA ' || SQLCODE);
    
    WHEN OTHERS
    THEN DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;

--Task04
DECLARE 
    FACULTY_REC FACULTY%ROWTYPE;
    B1 BOOLEAN;
    B2 BOOLEAN;
    B3 BOOLEAN;
    ROW_AMOUNT INT;
BEGIN
    SELECT * INTO FACULTY_REC FROM FACULTY WHERE FACULTY = 'ÒÎÂ';
    DBMS_OUTPUT.PUT_LINE(FACULTY_REC.FACULTY || ' ' || FACULTY_REC.FACULTY_NAME);
    B1 := SQL%FOUND;
    IF B1 THEN DBMS_OUTPUT.PUT_LINE('B1 = TRUE');
    ELSE DBMS_OUTPUT.PUT_LINE('B1 = FALSE'); END IF;
    B2 := SQL%ISOPEN; 
    IF B2 THEN DBMS_OUTPUT.PUT_LINE('B2 = TRUE');
    ELSE DBMS_OUTPUT.PUT_LINE('B2 = FALSE'); END IF;
    B3 := SQL%NOTFOUND; 
    IF B3 THEN DBMS_OUTPUT.PUT_LINE('B3 = TRUE');
    ELSE DBMS_OUTPUT.PUT_LINE('B3 = FALSE'); END IF;
    ROW_AMOUNT := SQL%ROWCOUNT; 
    DBMS_OUTPUT.PUT_LINE('ROW_AMOUNT = ' || ROW_AMOUNT);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('NO DATA FOUND' || ' ORA ' || SQLCODE);

    WHEN OTHERS
    THEN DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;

--Task05
DECLARE
    B1 BOOLEAN;
    B2 BOOLEAN;
    B3 BOOLEAN;
    ROW_AMOUNT INT;
    AUDITORIUM_REC AUDITORIUM%ROWTYPE;
BEGIN
    UPDATE AUDITORIUM SET
    AUDITORIUM = '314-1', AUDITORIUM_NAME = '314-1',
    AUDITORIUM_CAPACITY = 90, AUDITORIUM_TYPE = 'ËÊ' WHERE AUDITORIUM = '301-1';
    SELECT * INTO AUDITORIUM_REC FROM AUDITORIUM WHERE AUDITORIUM = '314-1';
    --ROLLBACK;
    DBMS_OUTPUT.PUT_LINE(AUDITORIUM_REC.AUDITORIUM_NAME || ' ' || AUDITORIUM_REC.AUDITORIUM_CAPACITY
    || ' ' || AUDITORIUM_REC.AUDITORIUM_TYPE);
    
    B1 := SQL%FOUND;
    IF B1 THEN DBMS_OUTPUT.PUT_LINE('B1 = TRUE');
    ELSE DBMS_OUTPUT.PUT_LINE('B1 = FALSE'); END IF;
    B2 := SQL%ISOPEN;
    IF B2 THEN DBMS_OUTPUT.PUT_LINE('B2 = TRUE');
    ELSE DBMS_OUTPUT.PUT_LINE('B2 = FALSE'); END IF;
    B3 := SQL%NOTFOUND;
    IF B3 THEN DBMS_OUTPUT.PUT_LINE('B3 = TRUE');
    ELSE DBMS_OUTPUT.PUT_LINE('B3 = FALSE'); END IF;
    ROW_AMOUNT := SQL%ROWCOUNT; 
    DBMS_OUTPUT.PUT_LINE('ROW_AMOUNT = ' || ROW_AMOUNT);
    
    --COMMIT;
    ROLLBACK;
    
EXCEPTION
    WHEN OTHERS
    THEN DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;

--Task06
DECLARE
    AUDITORIUM_REC AUDITORIUM%ROWTYPE;
BEGIN
    UPDATE AUDITORIUM SET
    AUDITORIUM_CAPACITY = 4
    WHERE AUDITORIUM = '314-4';
    SELECT * INTO AUDITORIUM_REC FROM AUDITORIUM WHERE AUDITORIUM = '314-4';
    DBMS_OUTPUT.PUT_LINE(AUDITORIUM_REC.AUDITORIUM);
EXCEPTION
    WHEN OTHERS
    THEN DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;

--Task07
SELECT * FROM AUDITORIUM;

DECLARE
    B1 BOOLEAN;
    B2 BOOLEAN;
    B3 BOOLEAN;
    ROW_AMOUNT INT;
    AUDITORIUM_REC AUDITORIUM%ROWTYPE;
BEGIN
    INSERT INTO AUDITORIUM VALUES
    ('228-1', '228-1', 90, 'ËÊ');
    SELECT * INTO AUDITORIUM_REC FROM AUDITORIUM WHERE AUDITORIUM = '228-1';
    --ROLLBACK;
    DBMS_OUTPUT.PUT_LINE(AUDITORIUM_REC.AUDITORIUM_NAME || ' ' || AUDITORIUM_REC.AUDITORIUM_CAPACITY
    || ' ' || AUDITORIUM_REC.AUDITORIUM_TYPE);
    
    B1 := SQL%FOUND;
    IF B1 THEN DBMS_OUTPUT.PUT_LINE('B1 = TRUE');
    ELSE DBMS_OUTPUT.PUT_LINE('B1 = FALSE'); END IF;
    B2 := SQL%ISOPEN;
    IF B2 THEN DBMS_OUTPUT.PUT_LINE('B2 = TRUE');
    ELSE DBMS_OUTPUT.PUT_LINE('B2 = FALSE'); END IF;
    B3 := SQL%NOTFOUND;
    IF B3 THEN DBMS_OUTPUT.PUT_LINE('B3 = TRUE');
    ELSE DBMS_OUTPUT.PUT_LINE('B3 = FALSE'); END IF;
    ROW_AMOUNT := SQL%ROWCOUNT; 
    DBMS_OUTPUT.PUT_LINE('ROW_AMOUNT = ' || ROW_AMOUNT);
    
    --COMMIT;
    ROLLBACK;
    
EXCEPTION
    WHEN OTHERS
    THEN DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;
SELECT * FROM AUDITORIUM;

--Task08
DECLARE
    AUDITORIUM_REC AUDITORIUM%ROWTYPE;
BEGIN
     INSERT INTO AUDITORIUM VALUES
    ('228-1', '228-1', 9, 'ËÊ');
    SELECT * INTO AUDITORIUM_REC FROM AUDITORIUM WHERE AUDITORIUM = '228-1';
    DBMS_OUTPUT.PUT_LINE(AUDITORIUM_REC.AUDITORIUM);
EXCEPTION
    WHEN OTHERS
    THEN DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;

--Task09
DECLARE
    B1 BOOLEAN;
    B2 BOOLEAN;
    B3 BOOLEAN;
    ROW_AMOUNT INT;
    AUDITORIUM_REC AUDITORIUM%ROWTYPE;
BEGIN
    DELETE AUDITORIUM WHERE AUDITORIUM = '206-1';
    --ROLLBACK;
    DBMS_OUTPUT.PUT_LINE(AUDITORIUM_REC.AUDITORIUM_NAME || ' ' || AUDITORIUM_REC.AUDITORIUM_CAPACITY
    || ' ' || AUDITORIUM_REC.AUDITORIUM_TYPE);
    
    B1 := SQL%FOUND;
    IF B1 THEN DBMS_OUTPUT.PUT_LINE('B1 = TRUE');
    ELSE DBMS_OUTPUT.PUT_LINE('B1 = FALSE'); END IF;
    B2 := SQL%ISOPEN;
    IF B2 THEN DBMS_OUTPUT.PUT_LINE('B2 = TRUE');
    ELSE DBMS_OUTPUT.PUT_LINE('B2 = FALSE'); END IF;
    B3 := SQL%NOTFOUND;
    IF B3 THEN DBMS_OUTPUT.PUT_LINE('B3 = TRUE');
    ELSE DBMS_OUTPUT.PUT_LINE('B3 = FALSE'); END IF;
    ROW_AMOUNT := SQL%ROWCOUNT; 
    DBMS_OUTPUT.PUT_LINE('ROW_AMOUNT = ' || ROW_AMOUNT);
    
    --COMMIT;
    ROLLBACK;
    
EXCEPTION
    WHEN OTHERS
    THEN DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;

--Task10 -- Kavo?
DECLARE
    AUDITORIUM_REC AUDITORIUM%ROWTYPE;
BEGIN
    DELETE AUDITORIUM WHERE AUDITORIUM_CAPACITY = 3;
    DBMS_OUTPUT.PUT_LINE(AUDITORIUM_REC.AUDITORIUM);
EXCEPTION
    WHEN OTHERS
    THEN DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;


--Task11
DECLARE
    CURSOR SUBJECT_CURSOR IS 
    SELECT * FROM SUBJECT;
    SUBJECT_FIELD SYSTEM.SUBJECT.SUBJECT%TYPE;
    SUBJECT_NAME_FIELD SYSTEM.SUBJECT.SUBJECT_NAME%TYPE;
    SUBJECT_PULPIT_FIELD SYSTEM.SUBJECT.PULPIT%TYPE;
BEGIN
    OPEN SUBJECT_CURSOR;
    DBMS_OUTPUT.PUT_LINE('ROWCOUNT = ' || SUBJECT_CURSOR%ROWCOUNT);
    LOOP
        FETCH SUBJECT_CURSOR INTO SUBJECT_FIELD, SUBJECT_NAME_FIELD, SUBJECT_PULPIT_FIELD;
        DBMS_OUTPUT.PUT_LINE(' ' || SUBJECT_CURSOR%ROWCOUNT 
                                || ' ' || RPAD(SUBJECT_FIELD, 10, ' ')
                                || ' ' || SUBJECT_NAME_FIELD
                                || ' ' || SUBJECT_PULPIT_FIELD);
        EXIT WHEN SUBJECT_CURSOR%NOTFOUND;
    END LOOP;
    DBMS_OUTPUT.PUT_LINE('ROWCOUNT = ' || SUBJECT_CURSOR%ROWCOUNT);
    CLOSE SUBJECT_CURSOR;
EXCEPTION
    WHEN OTHERS
    THEN DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;

--Task12
DECLARE
    CURSOR SUBJECT_CURSOR IS 
    SELECT * FROM SUBJECT;
    SUBJECT_REC SUBJECT%ROWTYPE;
BEGIN
    OPEN SUBJECT_CURSOR;
    DBMS_OUTPUT.PUT_LINE('ROWCOUNT = ' || SUBJECT_CURSOR%ROWCOUNT);
    FETCH SUBJECT_CURSOR INTO SUBJECT_REC;
    WHILE SUBJECT_CURSOR%FOUND
    LOOP
    DBMS_OUTPUT.PUT_LINE(' ' || SUBJECT_CURSOR%ROWCOUNT 
                                || ' ' || RPAD(SUBJECT_REC.SUBJECT, 10, ' ')
                                || ' ' || SUBJECT_REC.SUBJECT_NAME
                                || ' ' || SUBJECT_REC.PULPIT);
        FETCH SUBJECT_CURSOR INTO SUBJECT_REC;
    END LOOP;
    DBMS_OUTPUT.PUT_LINE('ROWCOUNT = ' || SUBJECT_CURSOR%ROWCOUNT);
    CLOSE SUBJECT_CURSOR;
EXCEPTION
    WHEN OTHERS
    THEN DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;

--Task13
DECLARE
    CURSOR JOIN_CURSOR IS 
    SELECT TEACHER_NAME, TEACHER.PULPIT FROM TEACHER
    JOIN PULPIT ON TEACHER.PULPIT = PULPIT.PULPIT;
    TEACHER_REC TEACHER%ROWTYPE;
BEGIN
    FOR TEACHER_REC IN JOIN_CURSOR
    LOOP
        DBMS_OUTPUT.PUT_LINE(TRIM(TEACHER_REC.PULPIT) || '   ' || TEACHER_REC.TEACHER_NAME);
    END LOOP;
    CLOSE JOIN_CURSOR;
EXCEPTION
    WHEN OTHERS
    THEN DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;

--Task14
SELECT * FROM AUDITORIUM;
DECLARE
    CURSOR AUDITORIUM_CURSOR (
    MIN_CAPACITY AUDITORIUM.AUDITORIUM_CAPACITY%TYPE,
    MAX_CAPACITY AUDITORIUM.AUDITORIUM_CAPACITY%TYPE) IS
    SELECT AUDITORIUM, AUDITORIUM_CAPACITY
    FROM AUDITORIUM WHERE AUDITORIUM_CAPACITY >= MIN_CAPACITY AND AUDITORIUM_CAPACITY <= MAX_CAPACITY;
    AUDITORIUM_FIELD AUDITORIUM.AUDITORIUM%TYPE;
    CAPACITY_FIELD AUDITORIUM.AUDITORIUM_CAPACITY%TYPE;
BEGIN
    OPEN AUDITORIUM_CURSOR(31, 60);
    FETCH AUDITORIUM_CURSOR INTO AUDITORIUM_FIELD, CAPACITY_FIELD;
    WHILE AUDITORIUM_CURSOR%FOUND
    LOOP
        DBMS_OUTPUT.PUT_LINE(AUDITORIUM_FIELD || ' ' || CAPACITY_FIELD);
        FETCH AUDITORIUM_CURSOR INTO AUDITORIUM_FIELD, CAPACITY_FIELD;
    END LOOP;
END;

--Task15
DECLARE
    TYPE SUBJECT_REF_CURSOR IS REF CURSOR RETURN SUBJECT%ROWTYPE;
    XCURSOR SUBJECT_REF_CURSOR;
    SUBJECT_REC SUBJECT%ROWTYPE;
BEGIN
    OPEN XCURSOR FOR SELECT * FROM SUBJECT;
    FETCH XCURSOR INTO SUBJECT_REC;
    WHILE XCURSOR%FOUND
    LOOP
        DBMS_OUTPUT.PUT_LINE(RPAD(SUBJECT_REC.SUBJECT, 10, ' ')
                                || ' ' || SUBJECT_REC.SUBJECT_NAME
                                || ' ' || SUBJECT_REC.PULPIT);
        FETCH XCURSOR INTO SUBJECT_REC;
    END LOOP;
    CLOSE XCURSOR;
END;

VARIABLE x REFCURSOR;
DECLARE
    TYPE SUBJECT_REF_CURSOR IS REF CURSOR RETURN SUBJECT%ROWTYPE;
    XCURSOR SUBJECT_REF_CURSOR;
    SUBJECT_REC SUBJECT%ROWTYPE;
BEGIN
    OPEN XCURSOR FOR SELECT * FROM SUBJECT;
    :x := XCURSOR;
END;
/
PRINT x;

--Task16
DECLARE
    CURSOR AUDITORIUM_CURSOR
    IS SELECT AUDITORIUM_TYPE,
                CURSOR(
                SELECT AUDITORIUM
                FROM AUDITORIUM A2
                WHERE A1.AUDITORIUM_TYPE = A2.AUDITORIUM_TYPE
                )
    FROM AUDITORIUM_TYPE A1;

    XCURSOR SYS_REFCURSOR;
    A1 AUDITORIUM_TYPE.AUDITORIUM_TYPE%TYPE;
    TXT VARCHAR2(1000);
    A2 AUDITORIUM.AUDITORIUM%TYPE;
BEGIN
    OPEN AUDITORIUM_CURSOR;
    FETCH AUDITORIUM_CURSOR INTO A1, XCURSOR;
    WHILE AUDITORIUM_CURSOR%FOUND
    LOOP
        TXT := RTRIM(A1)||':';
        LOOP
            FETCH XCURSOR INTO A2;
            EXIT WHEN XCURSOR%NOTFOUND;
            TXT := TXT||' '||RTRIM(A2);
        END LOOP;
        DBMS_OUTPUT.PUT_LINE(TXT);
        FETCH AUDITORIUM_CURSOR INTO A1, XCURSOR;
    END LOOP;
    CLOSE AUDITORIUM_CURSOR;
END;

--Task17
SELECT * FROM AUDITORIUM;
DECLARE
    CURSOR AUDITORIUM_CURSOR
    IS SELECT AUDITORIUM, AUDITORIUM_CAPACITY
    FROM AUDITORIUM FOR UPDATE;
    AUDITORIUM_FIELD AUDITORIUM.AUDITORIUM%TYPE;
    AUDITORIUM_CAPACITY_FIELD AUDITORIUM.AUDITORIUM_CAPACITY%TYPE;
BEGIN
    OPEN AUDITORIUM_CURSOR;
    FETCH AUDITORIUM_CURSOR INTO AUDITORIUM_FIELD, AUDITORIUM_CAPACITY_FIELD;
    WHILE AUDITORIUM_CURSOR%FOUND
    LOOP
        IF AUDITORIUM_CAPACITY_FIELD >= 40 AND AUDITORIUM_CAPACITY_FIELD <= 80
        THEN
            AUDITORIUM_CAPACITY_FIELD := AUDITORIUM_CAPACITY_FIELD * 0.9;
            UPDATE AUDITORIUM
            SET AUDITORIUM_CAPACITY = AUDITORIUM_CAPACITY_FIELD
            WHERE CURRENT OF AUDITORIUM_CURSOR;
        END IF;
        FETCH AUDITORIUM_CURSOR INTO AUDITORIUM_FIELD, AUDITORIUM_CAPACITY_FIELD;
    END LOOP;
    CLOSE AUDITORIUM_CURSOR;
END;

--Task18
SELECT * FROM AUDITORIUM;
DECLARE
    CURSOR AUDITORIUM_CURSOR
    IS SELECT AUDITORIUM, AUDITORIUM_CAPACITY
    FROM AUDITORIUM FOR UPDATE;
    AUDITORIUM_FIELD AUDITORIUM.AUDITORIUM%TYPE;
    AUDITORIUM_CAPACITY_FIELD AUDITORIUM.AUDITORIUM_CAPACITY%TYPE;
BEGIN
 OPEN AUDITORIUM_CURSOR;
    FETCH AUDITORIUM_CURSOR INTO AUDITORIUM_FIELD, AUDITORIUM_CAPACITY_FIELD;
    WHILE AUDITORIUM_CURSOR%FOUND
    LOOP
        IF AUDITORIUM_CAPACITY_FIELD <= 20 THEN
            DELETE AUDITORIUM WHERE CURRENT OF AUDITORIUM_CURSOR;
        END IF;
        FETCH AUDITORIUM_CURSOR INTO AUDITORIUM_FIELD, AUDITORIUM_CAPACITY_FIELD;
    END LOOP;
    CLOSE AUDITORIUM_CURSOR;
END;

--Task19
SELECT * FROM AUDITORIUM;
DECLARE
    CURSOR AUDITORIUM_CURSOR (CAP AUDITORIUM.AUDITORIUM_CAPACITY%TYPE)
    IS SELECT AUDITORIUM, AUDITORIUM_CAPACITY, ROWID
    FROM AUDITORIUM WHERE AUDITORIUM_CAPACITY >= CAP FOR UPDATE;
    AUDITORIUM_FIELD AUDITORIUM.AUDITORIUM%TYPE;
    AUDITORIUM_CAPACITY_FIELD AUDITORIUM.AUDITORIUM_CAPACITY%TYPE;
BEGIN
    FOR X IN AUDITORIUM_CURSOR(50)
    LOOP 
        CASE
            WHEN X.AUDITORIUM_CAPACITY <= 60
                THEN DELETE AUDITORIUM WHERE ROWID = X.ROWID;
            WHEN X.AUDITORIUM_CAPACITY > 60
                THEN UPDATE AUDITORIUM
                SET AUDITORIUM_CAPACITY = AUDITORIUM_CAPACITY - 1
                WHERE ROWID = X.ROWID;
        END CASE;
    END LOOP;
END;

--Task20
DECLARE
    COUNTER INT := 0;
    CURSOR TEACHER_CURSOR
    IS SELECT TEACHER, TEACHER_NAME FROM TEACHER;
    TEACHER_FIELD TEACHER.TEACHER%TYPE;
    TEACHER_NAME_FIELD TEACHER.TEACHER_NAME%TYPE;
BEGIN
    OPEN TEACHER_CURSOR;
    LOOP
        FETCH TEACHER_CURSOR INTO TEACHER_FIELD, TEACHER_NAME_FIELD;
        EXIT WHEN TEACHER_CURSOR%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE(RTRIM(TEACHER_FIELD)||' '||TEACHER_NAME_FIELD);
        COUNTER := COUNTER + 1;
        IF COUNTER = 3 THEN
            DBMS_OUTPUT.PUT_LINE('-------------------------------------------------------');
            COUNTER := 0;
        END IF;
    END LOOP;
    CLOSE TEACHER_CURSOR;
END;