--Task01
DROP PROCEDURE SHOW_TEACHERS_WORKING_AT_PULPIT;
CREATE OR REPLACE PROCEDURE SHOW_TEACHERS_WORKING_AT_PULPIT(P IN PULPIT.PULPIT%TYPE) IS
    CURSOR TEACHER_CURSOR IS
    SELECT TEACHER_NAME, PULPIT FROM TEACHER;
    TEACHER_NAME TEACHER.TEACHER_NAME%TYPE;
    TEACHER_PULPIT PULPIT.PULPIT%TYPE;
BEGIN
    DBMS_OUTPUT.PUT_LINE('TEACHERS WORKING AT ' || RTRIM(P) || ' PULPIT:');
    OPEN TEACHER_CURSOR;
    FETCH TEACHER_CURSOR INTO TEACHER_NAME, TEACHER_PULPIT;
    WHILE TEACHER_CURSOR%FOUND
    LOOP
        IF TEACHER_PULPIT = P THEN
            DBMS_OUTPUT.PUT_LINE(TEACHER_NAME);
        END IF;
        FETCH TEACHER_CURSOR INTO TEACHER_NAME, TEACHER_PULPIT;
    END LOOP;
    CLOSE TEACHER_CURSOR;
END SHOW_TEACHERS_WORKING_AT_PULPIT;

DECLARE
    P PULPIT.PULPIT%TYPE := 'ИСиТ';
BEGIN
    SHOW_TEACHERS_WORKING_AT_PULPIT(P);
END;


--Task02
DROP FUNCTION GET_AMOUNT_OF_TEACHERS_WORKING_AT_PULPIT;
CREATE OR REPLACE FUNCTION
GET_AMOUNT_OF_TEACHERS_WORKING_AT_PULPIT(P IN PULPIT.PULPIT%TYPE)
RETURN INT IS
    CURSOR TEACHER_CURSOR IS
    SELECT TEACHER_NAME, PULPIT FROM TEACHER;
    TEACHER_NAME TEACHER.TEACHER_NAME%TYPE;
    TEACHER_PULPIT TEACHER.TEACHER_NAME%TYPE;
    COUNTER INT := 0;
BEGIN
    OPEN TEACHER_CURSOR;
    FETCH TEACHER_CURSOR INTO TEACHER_NAME, TEACHER_PULPIT;
    WHILE TEACHER_CURSOR%FOUND
    LOOP
        IF TEACHER_PULPIT = P THEN
            COUNTER := COUNTER + 1;
        END IF;
        FETCH TEACHER_CURSOR INTO TEACHER_NAME, TEACHER_PULPIT;
    END LOOP;
    CLOSE TEACHER_CURSOR;
    RETURN COUNTER;
END GET_AMOUNT_OF_TEACHERS_WORKING_AT_PULPIT;

DECLARE
    P PULPIT.PULPIT%TYPE := 'ИСиТ';
    AMOUNT_OF_TEACHERS INT;
BEGIN
    AMOUNT_OF_TEACHERS := GET_AMOUNT_OF_TEACHERS_WORKING_AT_PULPIT(P);
    DBMS_OUTPUT.PUT_LINE('AMOUNT OF TEACHERS WORKING AT ' || RTRIM(P) || ' PULPIT: ' || AMOUNT_OF_TEACHERS);
END; 


--Task03.1
DROP PROCEDURE SHOW_TEACHERS_WORKING_AT_FACULTY;
CREATE OR REPLACE PROCEDURE SHOW_TEACHERS_WORKING_AT_FACULTY(F IN FACULTY.FACULTY%TYPE) IS
    CURSOR TEACHER_CURSOR IS
    SELECT T.TEACHER_NAME FROM FACULTY F
    INNER JOIN PULPIT P
    ON F.FACULTY = P.FACULTY
    INNER JOIN TEACHER T
    ON P.PULPIT = T.PULPIT
    WHERE F.FACULTY = F;
    TEACHER_NAME TEACHER.TEACHER_NAME%TYPE;
BEGIN
    DBMS_OUTPUT.PUT_LINE('TEACHERS WORKING AT ' || RTRIM(F) || ' FACULTY:');
    OPEN TEACHER_CURSOR;
    FETCH TEACHER_CURSOR INTO TEACHER_NAME;
    WHILE TEACHER_CURSOR%FOUND
    LOOP
        DBMS_OUTPUT.PUT_LINE(TEACHER_NAME);
        FETCH TEACHER_CURSOR INTO TEACHER_NAME;
    END LOOP;
    CLOSE TEACHER_CURSOR;
END SHOW_TEACHERS_WORKING_AT_FACULTY;

DECLARE
    F FACULTY.FACULTY%TYPE := 'ТОВ';
BEGIN
    SHOW_TEACHERS_WORKING_AT_FACULTY(F);
END;


--Task03.2
DROP PROCEDURE SHOW_SUBJECTS_BELONGING_TO_PULPIT;
CREATE OR REPLACE PROCEDURE SHOW_SUBJECTS_BELONGING_TO_PULPIT(P IN PULPIT.PULPIT%TYPE) IS
    CURSOR SUBJECT_CURSOR IS
    SELECT SUBJECT_NAME FROM SUBJECT S
    INNER JOIN PULPIT P
    ON P.PULPIT = S.PULPIT
    WHERE P.PULPIT = P;
    SUBJECT_NAME SUBJECT.SUBJECT_NAME%TYPE;
BEGIN
    DBMS_OUTPUT.PUT_LINE('SUBJECTS BELONGING TO ' || RTRIM(P) || ' PULPIT:');
    OPEN SUBJECT_CURSOR;
    FETCH SUBJECT_CURSOR INTO SUBJECT_NAME;
    WHILE SUBJECT_CURSOR%FOUND
    LOOP
        DBMS_OUTPUT.PUT_LINE(SUBJECT_NAME);
        FETCH SUBJECT_CURSOR INTO SUBJECT_NAME;
    END LOOP;
    CLOSE SUBJECT_CURSOR;
END SHOW_SUBJECTS_BELONGING_TO_PULPIT;

DECLARE
    P PULPIT.PULPIT%TYPE := 'ИСиТ';
BEGIN
    SHOW_SUBJECTS_BELONGING_TO_PULPIT(P);
END;


--Task04.1
DROP FUNCTION GET_AMOUNT_OF_TEACHERS_WORKING_AT_FACULTY;
CREATE OR REPLACE FUNCTION
GET_AMOUNT_OF_TEACHERS_WORKING_AT_FACULTY(F IN FACULTY.FACULTY%TYPE)
RETURN INT IS
    CURSOR TEACHER_CURSOR IS
    SELECT P.FACULTY FROM TEACHER T
    INNER JOIN PULPIT P
    ON P.PULPIT = T.PULPIT;
    TEACHER_FACULTY FACULTY.FACULTY%TYPE;
    COUNTER INT := 0;
BEGIN
    OPEN TEACHER_CURSOR;
    FETCH TEACHER_CURSOR INTO TEACHER_FACULTY;
    WHILE TEACHER_CURSOR%FOUND
    LOOP
        IF TEACHER_FACULTY = F THEN
            COUNTER := COUNTER + 1;
        END IF;
            FETCH TEACHER_CURSOR INTO TEACHER_FACULTY;
    END LOOP;
    CLOSE TEACHER_CURSOR;
    RETURN COUNTER;
END GET_AMOUNT_OF_TEACHERS_WORKING_AT_FACULTY;

DECLARE
    F FACULTY.FACULTY%TYPE := 'ИДиП';
    AMOUNT_OF_TEACHERS INT;
BEGIN
    AMOUNT_OF_TEACHERS := GET_AMOUNT_OF_TEACHERS_WORKING_AT_FACULTY(F);
    DBMS_OUTPUT.PUT_LINE('AMOUNT OF TEACHERS WORKING AT ' || RTRIM(F) || ' FACULTY: ' || AMOUNT_OF_TEACHERS);
END; 

--Here goes custom teacher task
--Task05
DROP PACKAGE BODY TEACHER_PACKAGE;
DROP PACKAGE TEACHER_PACKAGE;
CREATE OR REPLACE PACKAGE TEACHER_PACKAGE AS
    PROCEDURE SHOW_TEACHERS_WORKING_AT_PULPIT(P IN PULPIT.PULPIT%TYPE);
END TEACHER_PACKAGE;

CREATE OR REPLACE PACKAGE TEACHER_PACKAGE AS
    PROCEDURE SHOW_TEACHERS_WORKING_AT_PULPIT(P IN PULPIT.PULPIT%TYPE);
END TEACHER_PACKAGE;

--добавить 1 препода на две кафедры + сумма

--Task06
DECLARE
    P PULPIT.PULPIT%TYPE := 'ИСиТ';
    F FACULTY.FACULTY%TYPE := 'ИДиП';
BEGIN
    TEACHER_PACKAGE.SHOW_TEACHERS_WORKING_AT_PULPIT(P);
END;


DROP FUNCTION GET_AMOUNT_OF_TEACHERS_WORKING_AT_FACULTY;
CREATE OR REPLACE FUNCTION
GET_AMOUNT_OF_TEACHERS_WORKING_AT_FACULTY(F IN FACULTY.FACULTY%TYPE)
RETURN INT IS
    
BEGIN
    INSERT INTO TEACHER VALUES ('СМЛВ1', 'Смелов Владимир Владиславович', 'ОХ', '19.02.2011', 1000);
    
    SELECT P.FACULTY FROM TEACHER T
    INNER JOIN PULPIT P
    ON P.PULPIT = T.PULPIT;

END GET_AMOUNT_OF_TEACHERS_WORKING_AT_FACULTY;